"use client";
import React, { useState } from 'react';
import { Mic, Shield, IndianRupee, Users, Camera, Phone, MapPin, TrendingUp, CheckCircle, ArrowRight, Menu, X, Star, Clock, Globe, LogIn, UserPlus } from 'lucide-react';
import Link from "next/link";


const FarmerLandingPage = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [currentTestimonial, setCurrentTestimonial] = useState(0);
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [isSignUp, setIsSignUp] = useState(false);
  const [authData, setAuthData] = useState({
    name: '',
    phone: '',
    password: '',
    confirmPassword: ''
  });

  const features = [
    {
      icon: Mic,
      title: '‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∏‡•á ‡§¨‡•á‡§ö‡•á‡§Ç',
      subtitle: 'Voice Selling',
      description: '‡§¨‡§∏ ‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡•á‡§ö‡•á‡§Ç‡•§ ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§ AI ‡§Ü‡§™‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§ó‡§æ‡•§',
      englishDesc: 'Just speak to sell your products. No typing needed. AI will help you.',
      route: '/sell-product'
    },
    {
      icon: IndianRupee,
      title: '‡§∏‡•Ä‡§ß‡•á ‡§™‡•à‡§∏‡§æ',
      subtitle: 'Direct Payment',
      description: '‡§¨‡§ø‡§ö‡•å‡§≤‡§ø‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç‡•§ ‡§∏‡•Ä‡§ß‡•á ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§∏‡•á ‡§™‡•à‡§∏‡§æ‡•§ ‡§¨‡•ç‡§≤‡•â‡§ï‡§ö‡•á‡§® ‡§∏‡•á ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§‡•§',
      englishDesc: 'No middleman. Direct payment from buyer. Secure with blockchain.',
      route: '/payments'
    },
    {
      icon: Shield,
      title: '‡§™‡•Ç‡§∞‡•Ä ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ',
      subtitle: 'Complete Security',
      description: '‡§Ü‡§™‡§ï‡§æ ‡§°‡•á‡§ü‡§æ ‡§î‡§∞ ‡§™‡•à‡§∏‡§æ ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§‡•§ ‡§ß‡•ã‡§ñ‡§æ‡§ß‡§°‡§º‡•Ä ‡§ï‡§æ ‡§°‡§∞ ‡§®‡§π‡•Ä‡§Ç‡•§',
      englishDesc: 'Your data and money both secure. No fear of fraud.',
      route: '/security'
    },
    {
      icon: Users,
      title: '‡§¨‡§°‡§º‡§æ ‡§¨‡§æ‡§ú‡§º‡§æ‡§∞',
      subtitle: 'Large Market',
      description: '‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•§ ‡§™‡•Ç‡§∞‡•á ‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡•á‡§ö‡•á‡§Ç‡•§',
      englishDesc: 'Thousands of buyers. Sell across the country.',
      route: '/marketplace'
    },
    {
      icon: Camera,
      title: '‡§´‡•ã‡§ü‡•ã ‡§Ö‡§™‡§≤‡•ã‡§°',
      subtitle: 'Photo Upload',
      description: '‡§Ö‡§™‡§®‡•á ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§ï‡•Ä ‡§´‡•ã‡§ü‡•ã ‡§ñ‡•Ä‡§Ç‡§ö‡•á‡§Ç‡•§ ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§ï‡•ã ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç‡•§',
      englishDesc: 'Take photos of your products. Show to buyers.',
      route: '/photo-upload'
    },
    {
      icon: TrendingUp,
      title: '‡§¨‡•á‡§π‡§§‡§∞ ‡§¶‡§æ‡§Æ',
      subtitle: 'Better Prices',
      description: '‡§Æ‡§Ç‡§°‡•Ä ‡§∏‡•á ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§¶‡§æ‡§Æ ‡§Æ‡§ø‡§≤‡§§‡§æ ‡§π‡•à‡•§ ‡§∏‡•Ä‡§ß‡§æ ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç‡•§',
      englishDesc: 'Get better prices than mandi. Connect directly with buyers.',
      route: '/pricing'
    }
  ];

  const testimonials = [
    {
      name: '‡§∞‡§æ‡§ú‡•á‡§∂ ‡§ï‡•Å‡§Æ‡§æ‡§∞',
      location: '‡§™‡§Ç‡§ú‡§æ‡§¨',
      image: 'üë®‚Äçüåæ',
      rating: 5,
      text: '‡§¨‡§π‡•Å‡§§ ‡§Ü‡§∏‡§æ‡§® ‡§π‡•à‡•§ ‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§π‡•Ä ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡•á‡§ö ‡§¶‡§ø‡§Ø‡§æ‡•§ ‡§Æ‡§Ç‡§°‡•Ä ‡§∏‡•á 20% ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§¶‡§æ‡§Æ ‡§Æ‡§ø‡§≤‡§æ‡•§',
      englishText: 'Very easy. Sold products just by speaking. Got 20% more than mandi price.'
    },
    {
      name: '‡§∏‡•Å‡§∞‡•á‡§∂ ‡§™‡§ü‡•á‡§≤',
      location: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§', 
      image: 'üßë‚Äçüåæ',
      rating: 5,
      text: '‡§™‡§π‡§≤‡•á ‡§¨‡§ø‡§ö‡•å‡§≤‡§ø‡§Ø‡§æ ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§™‡•à‡§∏‡§æ ‡§≤‡•á‡§§‡§æ ‡§•‡§æ‡•§ ‡§Ö‡§¨ ‡§∏‡•Ä‡§ß‡§æ ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡§§‡§æ ‡§π‡•Ç‡§Å‡•§',
      englishText: 'Earlier middleman took too much money. Now I connect directly with buyers.'
    },
    {
      name: '‡§Ö‡§Æ‡§ø‡§§ ‡§∏‡§ø‡§Ç‡§π',
      location: '‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡•ç‡§∞‡§¶‡•á‡§∂',
      image: 'üë®‚Äçüåæ',
      rating: 5,
      text: 'AI ‡§¨‡§π‡•Å‡§§ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§π‡•à‡•§ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§∏‡§Æ‡§ù‡§§‡•Ä ‡§π‡•à‡•§ ‡§Æ‡•á‡§∞‡•Ä ‡§∏‡§æ‡§∞‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§∏‡§π‡•Ä ‡§≤‡§ø‡§ñ ‡§¶‡•á‡§§‡•Ä ‡§π‡•à‡•§',
      englishText: 'AI is very good. Understands Hindi. Records all my information correctly.'
    }
  ];

  const steps = [
    {
      step: '1',
      title: '‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç',
      subtitle: 'Register',
      description: '‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§î‡§∞ ‡§´‡•ã‡§® ‡§®‡§Ç‡§¨‡§∞ ‡§¶‡•á‡§Ç'
    },
    {
      step: '2', 
      title: '‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡§§‡§æ‡§è‡§Ç',
      subtitle: 'Tell About Product',
      description: 'AI ‡§∏‡•á ‡§¨‡§æ‡§§ ‡§ï‡§∞‡§ï‡•á ‡§Ö‡§™‡§®‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡§§‡§æ‡§è‡§Ç'
    },
    {
      step: '3',
      title: '‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç',
      subtitle: 'Take Photos',
      description: '‡§Ö‡§™‡§®‡•á ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§ï‡•Ä ‡§´‡•ã‡§ü‡•ã ‡§ñ‡•Ä‡§Ç‡§ö‡•á‡§Ç'
    },
    {
      step: '4',
      title: '‡§¨‡•á‡§ö‡•á‡§Ç',
      subtitle: 'Sell',
      description: '‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞ ‡§Æ‡§ø‡§≤‡§®‡•á ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç'
    }
  ];

  const benefits = [
    { icon: CheckCircle, text: '‡§ï‡•ã‡§à ‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡•ç‡§∞‡•á‡§∂‡§® ‡§´‡•Ä‡§∏ ‡§®‡§π‡•Ä‡§Ç', english: 'No registration fee' },
    { icon: CheckCircle, text: '‡§Æ‡•Å‡§´‡•ç‡§§ ‡§Æ‡•á‡§Ç AI ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ', english: 'Free AI assistance' },
    { icon: CheckCircle, text: '24/7 ‡§ï‡§∏‡•ç‡§ü‡§Æ‡§∞ ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü', english: '24/7 customer support' },
    { icon: CheckCircle, text: '‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§™‡•á‡§Æ‡•á‡§Ç‡§ü', english: 'Secure payment' },
    { icon: CheckCircle, text: '‡§™‡•Ç‡§∞‡•á ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§™‡§π‡•Å‡§Ç‡§ö', english: 'Pan India reach' },
    { icon: CheckCircle, text: '‡§¨‡§ø‡§®‡§æ ‡§ï‡§Æ‡•Ä‡§∂‡§®', english: 'No commission' }
  ];

  const handleAuthSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (isSignUp) {
      if (authData.password !== authData.confirmPassword) {
        alert('‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§Æ‡•à‡§ö ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∞‡§π‡•á / Passwords do not match');
        return;
      }
      console.log('Sign Up:', authData);
      alert('‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§π‡•Å‡§è / Successfully registered!');
    } else {
      console.log('Sign In:', { phone: authData.phone, password: authData.password });
      alert('‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≤‡•â‡§ó‡§ø‡§® ‡§π‡•Å‡§è / Successfully logged in!');
    }
    setShowAuthModal(false);
    setAuthData({ name: '', phone: '', password: '', confirmPassword: '' });
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setAuthData({
      ...authData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
      {/* Header */}
      <header className="bg-white shadow-lg sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center gap-3">
              <div className="bg-green-500 w-12 h-12 rounded-full flex items-center justify-center">
                <span className="text-2xl">üåæ</span>
              </div>
              <div>
                <h1 className="text-2xl font-bold text-gray-800">farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞</h1>
                <p className="text-sm text-gray-600">farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞</p>
              </div>
            </div>
            
            {/* Desktop Menu */}
            <nav className="hidden md:flex items-center gap-6">
              <a href="#features" className="text-gray-700 hover:text-green-600 font-medium">Features</a>
              <a href="#how-it-works" className="text-gray-700 hover:text-green-600 font-medium">How it Works</a>
              <a href="#testimonials" className="text-gray-700 hover:text-green-600 font-medium">Success Stories</a>
              <a href="#support" className="text-gray-700 hover:text-green-600 font-medium">Support</a>
              
              {/* Auth Buttons */}
              <div className="flex items-center gap-3">
                <Link href="/farmer/signin" className="flex items-center gap-2 text-gray-700 hover:text-green-600 font-medium px-4 py-2 rounded-lg hover:bg-green-50 transition-colors">
                  <LogIn className="w-4 h-4" />
                  Sign In
                </Link>
                <Link href="/farmer/signup" className="flex items-center gap-2 bg-green-500 text-white px-4 py-2 rounded-lg font-semibold hover:bg-green-600 transition-colors">
                  <UserPlus className="w-4 h-4" />
                  Sign Up
                </Link>
              </div>
            </nav>

            {/* Mobile Menu Button */}
            <button 
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="md:hidden p-2"
            >
              {isMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
            </button>
          </div>

          {/* Mobile Menu */}
          {isMenuOpen && (
            <div className="md:hidden py-4 border-t">
              <nav className="flex flex-col gap-4">
                <a href="#features" className="text-gray-700 hover:text-green-600 font-medium">Features</a>
                <a href="#how-it-works" className="text-gray-700 hover:text-green-600 font-medium">How it Works</a>
                <a href="#testimonials" className="text-gray-700 hover:text-green-600 font-medium">Success Stories</a>
                <a href="#support" className="text-gray-700 hover:text-green-600 font-medium">Support</a>
                
                {/* Mobile Auth Buttons */}
                <div className="flex flex-col gap-3 pt-4 border-t">
                  <Link
                    href="/farmer/signin"
                    onClick={() => setIsMenuOpen(false)}
                    className="flex items-center gap-2 text-gray-700 hover:text-green-600 font-medium px-4 py-2 rounded-lg hover:bg-green-50 transition-colors w-fit"
                  >
                    <LogIn className="w-4 h-4" />
                    Sign In
                  </Link>
                  <Link
                    href="/farmer/signup"
                    onClick={() => setIsMenuOpen(false)}
                    className="flex items-center gap-2 bg-green-500 text-white px-4 py-2 rounded-lg font-semibold hover:bg-green-600 transition-colors w-fit"
                  >
                    <UserPlus className="w-4 h-4" />
                    Sign Up
                  </Link>
                </div>
              </nav>
            </div>
          )}
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 px-4">
        <div className="max-w-7xl mx-auto text-center">
          <h2 className="text-5xl md:text-6xl font-bold text-gray-800 mb-6">
            ‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§¨‡•á‡§ö‡•á‡§Ç
            <br />
            <span className="text-green-600">‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§ï‡§Æ‡§æ‡§è‡§Ç</span>
          </h2>
          <p className="text-2xl text-gray-600 mb-4">
            Speak to Sell ‚Ä¢ Earn More
          </p>
          <p className="text-xl text-gray-600 mb-12 max-w-3xl mx-auto">
            ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§™‡§π‡§≤‡§æ ‡§Ü‡§µ‡§æ‡§ú‡§º ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞‡•§ AI ‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§∏‡•á ‡§Ö‡§™‡§®‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§® ‡§¨‡•á‡§ö‡•á‡§Ç‡•§
            <br />
            India&apos;s first voice-based farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞. Sell your products with AI assistance.
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center mb-16">
            <Link href='/farmer/selling'>
            <button className="bg-green-500 text-white text-xl font-bold py-4 px-8 rounded-2xl shadow-xl hover:bg-green-600 transition-all duration-200 hover:scale-105">
              ‡§Ö‡§≠‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç ‚Ä¢ Start Now
            </button>
            </Link>
            <button className="bg-white text-gray-700 text-xl font-semibold py-4 px-8 rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-200 border-2 border-gray-200">
              Demo ‡§¶‡•á‡§ñ‡•á‡§Ç ‚Ä¢ Watch Demo
            </button>
          </div>

          {/* Hero Stats */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
            <div className="bg-white rounded-2xl p-6 shadow-lg">
              <div className="text-4xl font-bold text-green-600 mb-2">12,000+</div>
              <div className="text-gray-600">‡§ï‡§ø‡§∏‡§æ‡§® ‚Ä¢ Farmers</div>
            </div>
            <div className="bg-white rounded-2xl p-6 shadow-lg">
              <div className="text-4xl font-bold text-blue-600 mb-2">45,000+</div>
              <div className="text-gray-600">‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‚Ä¢ Products</div>
            </div>
            <div className="bg-white rounded-2xl p-6 shadow-lg">
              <div className="text-4xl font-bold text-purple-600 mb-2">‚Çπ14 ‡§ï‡§∞‡•ã‡§°‡§º</div>
              <div className="text-gray-600">‡§ï‡•Å‡§≤ ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä ‚Ä¢ Total Sales</div>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section id="features" className="py-20 px-4 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§æ‡§∏ ‡§´‡•Ä‡§ö‡§∞‡•ç‡§∏
            </h3>
            <p className="text-xl text-gray-600">
              Special Features for You
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <div key={index} className="bg-gradient-to-br from-gray-50 to-white rounded-3xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer group">
                <div className="bg-green-100 w-16 h-16 rounded-2xl flex items-center justify-center mb-6 group-hover:bg-green-200 transition-colors">
                  <feature.icon className="w-8 h-8 text-green-600" />
                </div>
                <h4 className="text-2xl font-bold text-gray-800 mb-2">{feature.title}</h4>
                <p className="text-lg text-gray-500 mb-4">{feature.subtitle}</p>
                <p className="text-gray-700 mb-3">{feature.description}</p>
                <p className="text-sm text-gray-500 mb-4">{feature.englishDesc}</p>
                <div className="flex items-center text-green-600 font-semibold group-hover:text-green-700">
                  <span>Learn More</span>
                  <ArrowRight className="w-4 h-4 ml-2 group-hover:translate-x-1 transition-transform" />
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* How It Works */}
      <section id="how-it-works" className="py-20 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à?
            </h3>
            <p className="text-xl text-gray-600">
              How Does It Work?
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {steps.map((step, index) => (
              <div key={index} className="text-center">
                <div className="bg-green-500 text-white w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-6 shadow-lg">
                  {step.step}
                </div>
                <h4 className="text-xl font-bold text-gray-800 mb-2">{step.title}</h4>
                <p className="text-gray-600 mb-2">{step.subtitle}</p>
                <p className="text-gray-700">{step.description}</p>
                {index < steps.length - 1 && (
                  <ArrowRight className="w-8 h-8 text-gray-400 mx-auto mt-6 hidden lg:block" />
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Benefits */}
      <section className="py-20 px-4 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              ‡§Ü‡§™‡§ï‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡§ø‡§≤‡•á‡§ó‡§æ?
            </h3>
            <p className="text-xl text-gray-600">
              What Will You Get?
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-5xl mx-auto">
            {benefits.map((benefit, index) => (
              <div key={index} className="flex items-center gap-4 bg-green-50 rounded-2xl p-6">
                <benefit.icon className="w-8 h-8 text-green-600 flex-shrink-0" />
                <div>
                  <p className="font-semibold text-gray-800">{benefit.text}</p>
                  <p className="text-sm text-gray-600">{benefit.english}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials */}
      <section id="testimonials" className="py-20 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              ‡§ï‡§ø‡§∏‡§æ‡§® ‡§≠‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Ö‡§®‡•Å‡§≠‡§µ
            </h3>
            <p className="text-xl text-gray-600">
              Farmer Success Stories
            </p>
          </div>

          <div className="max-w-4xl mx-auto">
            <div className="bg-white rounded-3xl shadow-xl p-8 text-center">
              <div className="text-6xl mb-6">{testimonials[currentTestimonial].image}</div>
              <div className="flex justify-center mb-4">
                {[...Array(testimonials[currentTestimonial].rating)].map((_, i) => (
                  <Star key={i} className="w-6 h-6 text-yellow-400 fill-current" />
                ))}
              </div>
              <blockquote className="text-2xl text-gray-700 mb-6 italic">
                &ldquo;{testimonials[currentTestimonial].text}&rdquo;
              </blockquote>
              <p className="text-lg text-gray-600 mb-6">
                &ldquo;{testimonials[currentTestimonial].englishText}&rdquo;
              </p>
              <div>
                <p className="text-xl font-bold text-gray-800">{testimonials[currentTestimonial].name}</p>
                <p className="text-gray-600 flex items-center justify-center gap-2">
                  <MapPin className="w-4 h-4" />
                  {testimonials[currentTestimonial].location}
                </p>
              </div>
            </div>

            <div className="flex justify-center gap-4 mt-8">
              {testimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentTestimonial(index)}
                  className={`w-4 h-4 rounded-full transition-all ${
                    index === currentTestimonial ? 'bg-green-500' : 'bg-gray-300'
                  }`}
                />
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-4 bg-gradient-to-br from-green-500 to-blue-600">
        <div className="max-w-4xl mx-auto text-center text-white">
          <h3 className="text-4xl md:text-5xl font-bold mb-6">
            ‡§Ü‡§ú ‡§π‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç!
          </h3>
          <p className="text-2xl mb-4">Start Today!</p>
          <p className="text-xl mb-12 opacity-90">
            ‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§ï‡§ø‡§∏‡§æ‡§® ‡§≠‡§æ‡§à ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§ï‡§Æ‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§≠‡•Ä ‡§ú‡•Å‡§°‡§º‡§ø‡§è‡•§
            <br />
            Thousands of farmers are already earning. Join them today.
          </p>
          
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <button className="bg-white text-green-600 text-xl font-bold py-4 px-8 rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-200 hover:scale-105">
              ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§Æ‡•á‡§Ç ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç ‚Ä¢ Start Free
            </button>
            <button className="bg-transparent border-2 border-white text-white text-xl font-semibold py-4 px-8 rounded-2xl hover:bg-white hover:text-green-600 transition-all duration-200">
              ‡§Æ‡§¶‡§¶ ‡§ö‡§æ‡§π‡§ø‡§è? ‚Ä¢ Need Help?
            </button>
          </div>
        </div>
      </section>

      {/* Support Section */}
      <section id="support" className="py-20 px-4 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              ‡§π‡§Æ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç
            </h3>
            <p className="text-xl text-gray-600">
              Connect With Us
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
            <div className="text-center bg-blue-50 rounded-2xl p-8">
              <Phone className="w-12 h-12 text-blue-600 mx-auto mb-4" />
              <h4 className="text-xl font-bold mb-2">‡§´‡•ã‡§® ‡§∏‡§™‡•ã‡§∞‡•ç‡§ü</h4>
              <p className="text-gray-600 mb-4">Phone Support</p>
              <p className="text-2xl font-bold text-blue-600">1800-XXX-XXXX</p>
              <p className="text-sm text-gray-500">24/7 Available</p>
            </div>

            <div className="text-center bg-green-50 rounded-2xl p-8">
              <Globe className="w-12 h-12 text-green-600 mx-auto mb-4" />
              <h4 className="text-xl font-bold mb-2">‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§π‡•á‡§≤‡•ç‡§™</h4>
              <p className="text-gray-600 mb-4">Online Help</p>
              <p className="text-lg font-semibold text-green-600">help.farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞.com</p>
              <p className="text-sm text-gray-500">Video Tutorials</p>
            </div>

            <div className="text-center bg-purple-50 rounded-2xl p-8">
              <Clock className="w-12 h-12 text-purple-600 mx-auto mb-4" />
              <h4 className="text-xl font-bold mb-2">‡§ü‡•ç‡§∞‡•á‡§®‡§ø‡§Ç‡§ó</h4>
              <p className="text-gray-600 mb-4">Training</p>
              <p className="text-lg font-semibold text-purple-600">Free Classes</p>
              <p className="text-sm text-gray-500">Learn to Use</p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-12 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center gap-3 mb-4">
                <div className="bg-green-500 w-12 h-12 rounded-full flex items-center justify-center">
                  <span className="text-2xl">üåæ</span>
                </div>
                <div>
                  <h4 className="text-xl font-bold">farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞</h4>
                  <p className="text-sm text-gray-400">farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞</p>
                </div>
              </div>
              <p className="text-gray-400">
                ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§™‡§π‡§≤‡§æ ‡§Ü‡§µ‡§æ‡§ú‡§º ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞
              </p>
            </div>

            <div>
              <h5 className="text-lg font-semibold mb-4">Quick Links</h5>
              <ul className="space-y-2 text-gray-400">
                <li><a href="/sell" className="hover:text-white">Sell Product</a></li>
                <li><a href="/marketplace" className="hover:text-white">Marketplace</a></li>
                <li><a href="/payments" className="hover:text-white">Payments</a></li>
                <li><a href="/security" className="hover:text-white">Security</a></li>
              </ul>
            </div>

            <div>
              <h5 className="text-lg font-semibold mb-4">Support</h5>
              <ul className="space-y-2 text-gray-400">
                <li><a href="/help" className="hover:text-white">Help Center</a></li>
                <li><a href="/training" className="hover:text-white">Training</a></li>
                <li><a href="/contact" className="hover:text-white">Contact Us</a></li>
                <li><a href="/faq" className="hover:text-white">FAQ</a></li>
              </ul>
            </div>

            <div>
              <h5 className="text-lg font-semibold mb-4">Legal</h5>
              <ul className="space-y-2 text-gray-400">
                <li><a href="/privacy" className="hover:text-white">Privacy Policy</a></li>
                <li><a href="/terms" className="hover:text-white">Terms of Service</a></li>
                <li><a href="/blockchain" className="hover:text-white">Blockchain Info</a></li>
              </ul>
            </div>
          </div>

          <div className="border-t border-gray-700 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2025 farm‡§¨‡§æ‡§ú‡§º‡§æ‡§∞. Made with ‚ù§Ô∏è for Indian Farmers.</p>
          </div>
        </div>
      </footer>

      {/* Authentication Modal */}
      {showAuthModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-2xl max-w-md w-full p-8">
            <div className="flex justify-between items-center mb-6">
              <h2 className="text-2xl font-bold text-gray-800">
                {isSignUp ? '‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç / Sign Up' : '‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç / Sign In'}
              </h2>
              <button
                onClick={() => {
                  setShowAuthModal(false);
                  setAuthData({ name: '', phone: '', password: '', confirmPassword: '' });
                }}
                className="text-gray-400 hover:text-gray-600"
              >
                <X className="w-6 h-6" />
              </button>
            </div>

            <form onSubmit={handleAuthSubmit} className="space-y-4">
              {isSignUp && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡§®‡§æ‡§Æ / Name
                  </label>
                  <input
                    type="text"
                    name="name"
                    value={authData.name}
                    onChange={handleInputChange}
                    required={isSignUp}
                    className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500"
                    placeholder="‡§Ö‡§™‡§®‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç / Enter your name"
                  />
                </div>
              )}

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞ / Mobile Number
                </label>
                <input
                  type="tel"
                  name="phone"
                  value={authData.phone}
                  onChange={handleInputChange}
                  required
                  className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500"
                  placeholder="9876543210"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° / Password
                </label>
                <input
                  type="password"
                  name="password"
                  value={authData.password}
                  onChange={handleInputChange}
                  required
                  className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500"
                  placeholder="‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç / Enter password"
                />
              </div>

              {isSignUp && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§¶‡•ã‡§¨‡§æ‡§∞‡§æ / Confirm Password
                  </label>
                  <input
                    type="password"
                    name="confirmPassword"
                    value={authData.confirmPassword}
                    onChange={handleInputChange}
                    required={isSignUp}
                    className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500"
                    placeholder="‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§¶‡•ã‡§¨‡§æ‡§∞‡§æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç / Confirm password"
                  />
                </div>
              )}

              <button
                type="submit"
                className="w-full bg-green-500 text-white py-3 rounded-lg font-semibold hover:bg-green-600 transition-colors"
              >
                {isSignUp ? '‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç / Sign Up' : '‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç / Sign In'}
              </button>
            </form>

            <div className="mt-6 text-center">
              <p className="text-gray-600">
                {isSignUp ? '‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü ‡§π‡•à? / Already have an account?' : '‡§®‡§Ø‡§æ ‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç? / Need a new account?'}
              </p>
              <button
                onClick={() => {
                  setIsSignUp(!isSignUp);
                  setAuthData({ name: '', phone: '', password: '', confirmPassword: '' });
                }}
                className="text-green-600 hover:text-green-700 font-semibold mt-2"
              >
                {isSignUp ? '‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç / Sign In' : '‡§∞‡§ú‡§ø‡§∏‡•ç‡§ü‡§∞ ‡§ï‡§∞‡•á‡§Ç / Sign Up'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default FarmerLandingPage;